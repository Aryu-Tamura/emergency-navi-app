{"ast":null,"code":"var _jsxFileName = \"/Users/aryutamura/emergency-navi-app/frontend/src/components/EmergencyScreen.js\",\n  _s = $RefreshSig$();\n// =================================================================\n// 10. 上書き: frontend/src/components/EmergencyScreen.js\n// (症状に応じた画面遷移ロジックを追加)\n// =================================================================\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport QuestionComponent from './QuestionComponent';\nimport AmbulanceCallComponent from './AmbulanceCallComponent';\nimport InstructionComponent from './InstructionComponent';\nimport FinalScreen from './FinalScreen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:8000';\nconst DUMMY_SCENARIO_DATA = {\n  \"heatstroke_instructions\": {\n    \"id\": \"heatstroke_instructions\",\n    \"step_type\": \"INSTRUCTION\",\n    \"message\": \"熱中症の応急処置\"\n  },\n  \"others_instructions\": {\n    \"id\": \"others_instructions\",\n    \"step_type\": \"INSTRUCTION\",\n    \"message\": \"専門家の指示に従ってください\"\n  }\n};\nconst EmergencyScreen = () => {\n  _s();\n  const [history, setHistory] = useState(['start']);\n  const [currentStep, setCurrentStep] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchStep(history[history.length - 1]);\n  }, [history]);\n  const fetchStep = async stepId => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/step/${stepId}`);\n      setCurrentStep(response.data);\n    } catch (err) {\n      if (DUMMY_SCENARIO_DATA[stepId]) {\n        setCurrentStep(DUMMY_SCENARIO_DATA[stepId]);\n      } else {\n        setError('データの取得に失敗しました。');\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleNextStep = nextStepId => {\n    setHistory(prev => [...prev, nextStepId]);\n  };\n  const handleGoBack = () => {\n    if (history.length > 1) {\n      setHistory(prev => prev.slice(0, -1));\n    }\n  };\n  const handleProceedToInstructions = symptom => {\n    if (symptom === 'Heat_Stroke') {\n      handleNextStep('heatstroke_instructions');\n    } else {\n      // For \"Others\" or \"No_Problem\" or any error case\n      handleNextStep('others_instructions');\n    }\n  };\n  const renderCurrentStep = () => {\n    if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        fontSize: '2rem'\n      },\n      children: \"\\u8AAD\\u307F\\u8FBC\\u307F\\u4E2D...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 31\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        textAlign: 'center',\n        fontSize: '2rem'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 27\n    }, this);\n    if (!currentStep) return null;\n    const props = {\n      step: currentStep,\n      onGoBack: handleGoBack\n    };\n    switch (currentStep.step_type) {\n      case 'QUESTION':\n        return /*#__PURE__*/_jsxDEV(QuestionComponent, {\n          ...props,\n          onOptionSelect: handleNextStep\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 24\n        }, this);\n      case 'AMBULANCE_CALL':\n        return /*#__PURE__*/_jsxDEV(AmbulanceCallComponent, {\n          ...props,\n          onProceed: handleProceedToInstructions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 24\n        }, this);\n      case 'INSTRUCTION':\n        return /*#__PURE__*/_jsxDEV(InstructionComponent, {\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 24\n        }, this);\n      case 'FINAL_NO_EMERGENCY':\n        return /*#__PURE__*/_jsxDEV(FinalScreen, {\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\u4E0D\\u660E\\u306A\\u30B9\\u30C6\\u30C3\\u30D7\\u30BF\\u30A4\\u30D7\\u3067\\u3059\\u3002\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 24\n        }, this);\n    }\n  };\n  return renderCurrentStep();\n};\n_s(EmergencyScreen, \"tAFs11Q+s+fHg3M+oj61uwxXjUo=\");\n_c = EmergencyScreen;\nexport default EmergencyScreen;\nvar _c;\n$RefreshReg$(_c, \"EmergencyScreen\");","map":{"version":3,"names":["React","useState","useEffect","axios","QuestionComponent","AmbulanceCallComponent","InstructionComponent","FinalScreen","jsxDEV","_jsxDEV","API_BASE_URL","DUMMY_SCENARIO_DATA","EmergencyScreen","_s","history","setHistory","currentStep","setCurrentStep","isLoading","setIsLoading","error","setError","fetchStep","length","stepId","response","get","data","err","handleNextStep","nextStepId","prev","handleGoBack","slice","handleProceedToInstructions","symptom","renderCurrentStep","style","textAlign","fontSize","children","fileName","_jsxFileName","lineNumber","columnNumber","color","props","step","onGoBack","step_type","onOptionSelect","onProceed","_c","$RefreshReg$"],"sources":["/Users/aryutamura/emergency-navi-app/frontend/src/components/EmergencyScreen.js"],"sourcesContent":["// =================================================================\n// 10. 上書き: frontend/src/components/EmergencyScreen.js\n// (症状に応じた画面遷移ロジックを追加)\n// =================================================================\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport QuestionComponent from './QuestionComponent';\nimport AmbulanceCallComponent from './AmbulanceCallComponent';\nimport InstructionComponent from './InstructionComponent';\nimport FinalScreen from './FinalScreen';\n\nconst API_BASE_URL = 'http://localhost:8000';\n\nconst DUMMY_SCENARIO_DATA = {\n    \"heatstroke_instructions\": { \"id\": \"heatstroke_instructions\", \"step_type\": \"INSTRUCTION\", \"message\": \"熱中症の応急処置\" },\n    \"others_instructions\": { \"id\": \"others_instructions\", \"step_type\": \"INSTRUCTION\", \"message\": \"専門家の指示に従ってください\" }\n};\n\nconst EmergencyScreen = () => {\n    const [history, setHistory] = useState(['start']);\n    const [currentStep, setCurrentStep] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState(null);\n    \n    useEffect(() => {\n        fetchStep(history[history.length - 1]);\n    }, [history]);\n\n    const fetchStep = async (stepId) => {\n        setIsLoading(true);\n        setError(null);\n        try {\n            const response = await axios.get(`${API_BASE_URL}/api/step/${stepId}`);\n            setCurrentStep(response.data);\n        } catch (err) {\n            if (DUMMY_SCENARIO_DATA[stepId]) {\n                setCurrentStep(DUMMY_SCENARIO_DATA[stepId]);\n            } else {\n                setError('データの取得に失敗しました。');\n            }\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const handleNextStep = (nextStepId) => {\n        setHistory(prev => [...prev, nextStepId]);\n    };\n\n    const handleGoBack = () => {\n        if (history.length > 1) {\n            setHistory(prev => prev.slice(0, -1));\n        }\n    };\n    \n    const handleProceedToInstructions = (symptom) => {\n        if (symptom === 'Heat_Stroke') {\n            handleNextStep('heatstroke_instructions');\n        } else {\n            // For \"Others\" or \"No_Problem\" or any error case\n            handleNextStep('others_instructions');\n        }\n    };\n\n    const renderCurrentStep = () => {\n        if (isLoading) return <div style={{textAlign: 'center', fontSize: '2rem'}}>読み込み中...</div>;\n        if (error) return <div style={{color: 'red', textAlign: 'center', fontSize: '2rem'}}>{error}</div>;\n        if (!currentStep) return null;\n\n        const props = { step: currentStep, onGoBack: handleGoBack };\n\n        switch (currentStep.step_type) {\n            case 'QUESTION':\n                return <QuestionComponent {...props} onOptionSelect={handleNextStep} />;\n            case 'AMBULANCE_CALL':\n                return <AmbulanceCallComponent {...props} onProceed={handleProceedToInstructions} />;\n            case 'INSTRUCTION':\n                return <InstructionComponent {...props} />;\n            case 'FINAL_NO_EMERGENCY':\n                 return <FinalScreen {...props} />;\n            default:\n                return <div>不明なステップタイプです。</div>;\n        }\n    };\n\n    return renderCurrentStep();\n};\nexport default EmergencyScreen;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,sBAAsB,MAAM,0BAA0B;AAC7D,OAAOC,oBAAoB,MAAM,wBAAwB;AACzD,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAG,uBAAuB;AAE5C,MAAMC,mBAAmB,GAAG;EACxB,yBAAyB,EAAE;IAAE,IAAI,EAAE,yBAAyB;IAAE,WAAW,EAAE,aAAa;IAAE,SAAS,EAAE;EAAW,CAAC;EACjH,qBAAqB,EAAE;IAAE,IAAI,EAAE,qBAAqB;IAAE,WAAW,EAAE,aAAa;IAAE,SAAS,EAAE;EAAiB;AAClH,CAAC;AAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;EACjD,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZoB,SAAS,CAACR,OAAO,CAACA,OAAO,CAACS,MAAM,GAAG,CAAC,CAAC,CAAC;EAC1C,CAAC,EAAE,CAACT,OAAO,CAAC,CAAC;EAEb,MAAMQ,SAAS,GAAG,MAAOE,MAAM,IAAK;IAChCL,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACA,MAAMI,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAAC,GAAGhB,YAAY,aAAac,MAAM,EAAE,CAAC;MACtEP,cAAc,CAACQ,QAAQ,CAACE,IAAI,CAAC;IACjC,CAAC,CAAC,OAAOC,GAAG,EAAE;MACV,IAAIjB,mBAAmB,CAACa,MAAM,CAAC,EAAE;QAC7BP,cAAc,CAACN,mBAAmB,CAACa,MAAM,CAAC,CAAC;MAC/C,CAAC,MAAM;QACHH,QAAQ,CAAC,gBAAgB,CAAC;MAC9B;IACJ,CAAC,SAAS;MACNF,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EAED,MAAMU,cAAc,GAAIC,UAAU,IAAK;IACnCf,UAAU,CAACgB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAED,UAAU,CAAC,CAAC;EAC7C,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAM;IACvB,IAAIlB,OAAO,CAACS,MAAM,GAAG,CAAC,EAAE;MACpBR,UAAU,CAACgB,IAAI,IAAIA,IAAI,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACzC;EACJ,CAAC;EAED,MAAMC,2BAA2B,GAAIC,OAAO,IAAK;IAC7C,IAAIA,OAAO,KAAK,aAAa,EAAE;MAC3BN,cAAc,CAAC,yBAAyB,CAAC;IAC7C,CAAC,MAAM;MACH;MACAA,cAAc,CAAC,qBAAqB,CAAC;IACzC;EACJ,CAAC;EAED,MAAMO,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,IAAIlB,SAAS,EAAE,oBAAOT,OAAA;MAAK4B,KAAK,EAAE;QAACC,SAAS,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAM,CAAE;MAAAC,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;IACzF,IAAIxB,KAAK,EAAE,oBAAOX,OAAA;MAAK4B,KAAK,EAAE;QAACQ,KAAK,EAAE,KAAK;QAAEP,SAAS,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAM,CAAE;MAAAC,QAAA,EAAEpB;IAAK;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;IAClG,IAAI,CAAC5B,WAAW,EAAE,OAAO,IAAI;IAE7B,MAAM8B,KAAK,GAAG;MAAEC,IAAI,EAAE/B,WAAW;MAAEgC,QAAQ,EAAEhB;IAAa,CAAC;IAE3D,QAAQhB,WAAW,CAACiC,SAAS;MACzB,KAAK,UAAU;QACX,oBAAOxC,OAAA,CAACL,iBAAiB;UAAA,GAAK0C,KAAK;UAAEI,cAAc,EAAErB;QAAe;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAC3E,KAAK,gBAAgB;QACjB,oBAAOnC,OAAA,CAACJ,sBAAsB;UAAA,GAAKyC,KAAK;UAAEK,SAAS,EAAEjB;QAA4B;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACxF,KAAK,aAAa;QACd,oBAAOnC,OAAA,CAACH,oBAAoB;UAAA,GAAKwC;QAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAC9C,KAAK,oBAAoB;QACpB,oBAAOnC,OAAA,CAACF,WAAW;UAAA,GAAKuC;QAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MACtC;QACI,oBAAOnC,OAAA;UAAA+B,QAAA,EAAK;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;IACvC;EACJ,CAAC;EAED,OAAOR,iBAAiB,CAAC,CAAC;AAC9B,CAAC;AAACvB,EAAA,CApEID,eAAe;AAAAwC,EAAA,GAAfxC,eAAe;AAqErB,eAAeA,eAAe;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}