{"ast":null,"code":"var _jsxFileName = \"/Users/aryutamura/emergency-navi-app/frontend/src/components/EmergencyScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'axios';\nimport axios from 'axios';\nimport QuestionComponent from './QuestionComponent';\nimport AmbulanceCallComponent from './AmbulanceCallComponent';\nimport FinalScreen from './FinalScreen';\n// 他のコンポーネントも同様にインポート\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:8000'; // バックエンドのURL\n\nconst EmergencyScreen = () => {\n  _s();\n  const [currentStep, setCurrentStep] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const audioRef = useRef(null);\n  useEffect(() => {\n    // 初期ステップをロード\n    fetchStep('start');\n  }, []);\n\n  // ステップが更新されたら音声を再生\n  useEffect(() => {\n    if (currentStep !== null && currentStep !== void 0 && currentStep.audio_url) {\n      audioRef.current.src = currentStep.audio_url;\n      audioRef.current.play().catch(e => console.error(\"Audio playback failed:\", e));\n    }\n  }, [currentStep]);\n  const fetchStep = async stepId => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/step/${stepId}`);\n      setCurrentStep(response.data);\n    } catch (err) {\n      setError('データの取得に失敗しました。');\n      console.error(err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleNextStep = nextStepId => {\n    if (nextStepId) {\n      fetchStep(nextStepId);\n    }\n  };\n  const renderCurrentStep = () => {\n    if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u8AAD\\u307F\\u8FBC\\u307F\\u4E2D...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 31\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 27\n    }, this);\n    if (!currentStep) return null;\n    switch (currentStep.step_type) {\n      case 'QUESTION':\n        return /*#__PURE__*/_jsxDEV(QuestionComponent, {\n          step: currentStep,\n          onOptionSelect: handleNextStep\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 24\n        }, this);\n      case 'AMBULANCE_CALL':\n        return /*#__PURE__*/_jsxDEV(AmbulanceCallComponent, {\n          step: currentStep\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 24\n        }, this);\n      case 'FINAL_NO_EMERGENCY':\n        return /*#__PURE__*/_jsxDEV(FinalScreen, {\n          step: currentStep\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this);\n      // 他のstep_typeに対応するコンポーネントをここに追加\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\u4E0D\\u660E\\u306A\\u30B9\\u30C6\\u30C3\\u30D7\\u30BF\\u30A4\\u30D7\\u3067\\u3059\\u3002\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 24\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"emergency-container\",\n    children: [renderCurrentStep(), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(EmergencyScreen, \"KNAD4iuNh5nsKGV8IDkE96Zp+M4=\");\n_c = EmergencyScreen;\nexport default EmergencyScreen;\nvar _c;\n$RefreshReg$(_c, \"EmergencyScreen\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","QuestionComponent","AmbulanceCallComponent","FinalScreen","jsxDEV","_jsxDEV","API_BASE_URL","EmergencyScreen","_s","currentStep","setCurrentStep","isLoading","setIsLoading","error","setError","audioRef","fetchStep","audio_url","current","src","play","catch","e","console","stepId","response","get","data","err","handleNextStep","nextStepId","renderCurrentStep","children","fileName","_jsxFileName","lineNumber","columnNumber","className","step_type","step","onOptionSelect","ref","style","display","_c","$RefreshReg$"],"sources":["/Users/aryutamura/emergency-navi-app/frontend/src/components/EmergencyScreen.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'axios';\nimport axios from 'axios';\n\nimport QuestionComponent from './QuestionComponent';\nimport AmbulanceCallComponent from './AmbulanceCallComponent';\nimport FinalScreen from './FinalScreen';\n// 他のコンポーネントも同様にインポート\n\nconst API_BASE_URL = 'http://localhost:8000'; // バックエンドのURL\n\nconst EmergencyScreen = () => {\n    const [currentStep, setCurrentStep] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const audioRef = useRef(null);\n\n    useEffect(() => {\n        // 初期ステップをロード\n        fetchStep('start');\n    }, []);\n\n    // ステップが更新されたら音声を再生\n    useEffect(() => {\n        if (currentStep?.audio_url) {\n            audioRef.current.src = currentStep.audio_url;\n            audioRef.current.play().catch(e => console.error(\"Audio playback failed:\", e));\n        }\n    }, [currentStep]);\n\n\n    const fetchStep = async (stepId) => {\n        setIsLoading(true);\n        setError(null);\n        try {\n            const response = await axios.get(`${API_BASE_URL}/api/step/${stepId}`);\n            setCurrentStep(response.data);\n        } catch (err) {\n            setError('データの取得に失敗しました。');\n            console.error(err);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const handleNextStep = (nextStepId) => {\n        if (nextStepId) {\n            fetchStep(nextStepId);\n        }\n    };\n\n    const renderCurrentStep = () => {\n        if (isLoading) return <div>読み込み中...</div>;\n        if (error) return <div className=\"error\">{error}</div>;\n        if (!currentStep) return null;\n\n        switch (currentStep.step_type) {\n            case 'QUESTION':\n                return <QuestionComponent step={currentStep} onOptionSelect={handleNextStep} />;\n            case 'AMBULANCE_CALL':\n                return <AmbulanceCallComponent step={currentStep} />;\n            case 'FINAL_NO_EMERGENCY':\n                 return <FinalScreen step={currentStep} />;\n            // 他のstep_typeに対応するコンポーネントをここに追加\n            default:\n                return <div>不明なステップタイプです。</div>;\n        }\n    };\n\n    return (\n        <div className=\"emergency-container\">\n            {renderCurrentStep()}\n            <audio ref={audioRef} style={{ display: 'none' }} />\n        </div>\n    );\n};\n\nexport default EmergencyScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}